{
	// Place your PowerJira workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Parameter Checker": {
		"scope":"powershell",
		"prefix":"checkparam",
		"body" : [
			"if(\\$PSBoundParameters.ContainsKey(\"${1}\")){\\$RestArgs.${3}.Add(\"${2}\",\\$${1})}"
		],
		"description": "Snippet for adding an item to a hashtable if a named function parameter is set"
	},
	"KVP Parameter Checker": {
		"scope":"powershell",
		"prefix":"kvpcheckparam",
		"body" : [
			"if(\\$PSBoundParameters.ContainsKey(\"${1}\")){\\$$RestArgs.QueryKvp += Format-QueryKvp \"${2}\" \\$${1}}"
		],
		"description": "Snippet for adding an item to an array of key value pairs if a named function parameter is set"
	},
	"Invoke-Jira cmdlet": {
		"scope":"powershell",
		"prefix":"ijcmdlet",
		"body" : [
			"\\#",
			"function Invoke-Jira$1 {",
			"\t[CmdletBinding()]",
			"\tparam (\n\n\n",
			"\t\t# The JiraContext object to use for the request",
			"\t\t[Parameter()]",
			"\t\t[object]",
			"\t\t\\$JiraContext",
			"\t)",
			"\tprocess {",
			"\t\t\\$functionPath = \"\"",
			"\t\t\\$verb = \"\"\n",
			"\t\t\\$query = New-PACRestMethodQueryParams",
			"\t\t\\$body = New-PACRestMethodJsonBody\n",
			"\t\t\\$method = New-PACRestMethod \\$functionPath \\$verb \\$query \\$body",
			"\t\t\\$method.Invoke(\\$JiraContext)",
			"\t}",
			"}",
		],
		"description": "Snippet for templating a new Invoke-Jira* API wrapper"
	},
	"breakpoint": {
		"scope":"powershell",
		"prefix": "breakpoint",
		"body": [
			"Read-Host -Prompt \"Press any key to continue or CTRL+C to quit\""
		],
		"description": "Insert a breakpoint"
	},
	"Default PowerJira begin clause": {
		"scope":"powershell",
		"prefix": "jbegin",
		"body": [
			"begin {",
			"\t\\$results = @()",
			"}"
		],
		"description": "The default cmdlet begin clause for PowerJira cmdlets"
	},
	"Default PowerJira end clause": {
		"scope":"powershell",
		"prefix": "jend",
		"body": [
			"end {",
			"\t\\$results",
			"}"
		],
		"description": "The default cmdlet end clause for PowerJira cmdlets"
	},
	"Basic powershell class snippet": {
		"scope":"powershell",
		"prefix": "pclass",
		"body": [
			"class $1 {\n",
			"\t#####################",
			"\t# HIDDEN PROPERTIES #",
			"\t#####################\n\n\t\n",
			"\t#####################",
			"\t# PUBLIC PROPERTIES #",
			"\t#####################\n\n\t\n",
			"\t#####################",
			"\t# CONSTRUCTORS      #",
			"\t#####################\n\n\t\n",
			"\t#####################",
			"\t# HIDDEN METHODS    #",
			"\t#####################\n\n\t\n",
			"\t#####################",
			"\t# PUBLIC METHODS    #",
			"\t#####################\n\n\t\n",
			"}"
		],
		"description": "Creates an outline of a class with comment sections for each member type"
	},
	"PowerJira RestMethod invocation": {
		"scope":"powershell",
		"prefix": "jrest",
		"body": [
			"\\$method = New-PACRestMethod \\$functionPath \\$verb",
			"\\$method.Invoke(\\$JiraContext)"
		],
		"description": "Default invocation of a rest method"
	},
	"PowerJira BodyRestMethod invocation": {
		"scope":"powershell",
		"prefix": "jbrest",
		"body": [
			"\\$method = New-PACRestMethod \\$functionPath \\$verb \\$null \\$body",
			"\\$method.Invoke(\\$JiraContext)"
		],
		"description": "Default invocation of a rest method"
	},
	"PowerJira new RestMethodQueryParams": {
		"scope":"powershell",
		"prefix": "rmqp",
		"body": [
			"New-PACRestMethodQueryParams"
		],
		"description": "New instances of RestMethodQueryParams"
	},
	"PowerJira new RestMethodJsonBody": {
		"scope":"powershell",
		"prefix": "rmjb",
		"body": [
			"New-PACRestMethodJsonBody"
		],
		"description": "New instances of RestMethodJsonBody"
	},
	"PowerJira RestMethod query invocation": {
		"scope":"powershell",
		"prefix": "jqrest",
		"body": [
			"\\$method = New-PACRestMethod \\$functionPath \\$verb \\$query",
			"\\$method.Invoke(\\$JiraContext)"
		],
		"description": "query invocation of a rest method"
	},
	
}